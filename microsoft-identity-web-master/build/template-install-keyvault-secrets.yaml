# template-install-keyvault-secrets.yaml
# Install all secrets needed from KeyVault onto the build machine.

steps:
- task: AzureKeyVault@1
  displayName: 'Azure Key Vault: buildautomation'
  inputs:
    azureSubscription: '.NET Keyvault'
    KeyVaultName: buildautomation
    SecretsFilter: 'AzureADIdentityDivisionTestAgentCert, RSATestCertDotNet'


- powershell: |
   $kvSecretBytes = [System.Convert]::FromBase64String('$(AzureADIdentityDivisionTestAgentCert)')
   $certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
   $certCollection.Import($kvSecretBytes, $null, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

   $protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12)
   $pfxPath = '$(Build.SourcesDirectory)' + "\TestCert.pfx"
   [System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)

   Import-PfxCertificate -FilePath $pfxPath -CertStoreLocation Cert:\LocalMachine\My

   $kvSecretBytes = [System.Convert]::FromBase64String('$(RSATestCertDotNet)')
   $certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
   $certCollection.Import($kvSecretBytes, $null, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

   $protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12)
   $pfxPath = '$(Build.SourcesDirectory)' + "\TestCert.pfx"
   [System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)

   Import-PfxCertificate -FilePath $pfxPath -CertStoreLocation Cert:\LocalMachine\My
  displayName: 'Install Keyvault Secrets'
