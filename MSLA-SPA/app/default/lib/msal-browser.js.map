{"version":3,"file":"msal-browser.js","sources":["../../msal-common/dist/index.es.js","../src/utils/BrowserConstants.ts","../src/network/FetchClient.ts","../src/error/BrowserAuthError.ts","../src/network/XhrClient.ts","../src/utils/BrowserUtils.ts","../src/app/Configuration.ts","../src/error/BrowserConfigurationAuthError.ts","../src/cache/BrowserStorage.ts","../src/utils/MathUtils.ts","../src/crypto/GuidGenerator.ts","../src/utils/BrowserStringUtils.ts","../src/encode/Base64Encode.ts","../src/encode/Base64Decode.ts","../src/crypto/PkceGenerator.ts","../src/crypto/BrowserCrypto.ts","../src/crypto/CryptoOps.ts","../src/interaction_handler/InteractionHandler.ts","../src/interaction_handler/RedirectHandler.ts","../src/interaction_handler/PopupHandler.ts","../src/app/PublicClientApplication.ts"],"sourcesContent":["/*! @azure/msal-common v1.0.0-beta.0 2020-04-15 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.0.0-beta.0\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.3\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypescript: \"^3.6.4\"\n};\nvar dependencies = {\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority, resource, or account.\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    ClientAuthError.createTokenRequestCacheError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCacheError.code, ClientAuthErrorMessage.tokenRequestCacheError.desc + \" Error Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function (scopes) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc + \" Scopes: \" + scopes);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries and converts them to lower case.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimAndConvertArrayEntriesToLowerCase = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim().toLowerCase(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\n// Default module system options\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    telemetry: null\r\n};\r\n// Default logger implementation\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        var notImplErr = \"Logger - loggerCallbackInterface() has not been implemented.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\n// Default storage implementation\r\nvar DEFAULT_STORAGE_IMPLEMENTATION = {\r\n    clear: function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    containsKey: function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    getItem: function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    getKeys: function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    removeItem: function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    setItem: function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    }\r\n};\r\n// Default network implementation\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\n// Default crypto implementation\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TStorageOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns MsalConfiguration object\r\n */\r\nfunction buildModuleConfiguration(_a) {\r\n    var userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface;\r\n    var overlayedConfig = {\r\n        systemOptions: userSystemOptions || DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: userLoggerOption || DEFAULT_LOGGER_IMPLEMENTATION,\r\n        storageInterface: storageImplementation || DEFAULT_STORAGE_IMPLEMENTATION,\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION\r\n    };\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * Access token cache item which is used to manage tokens and token renewal.\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HEADER_NAMES;\r\n(function (HEADER_NAMES) {\r\n    HEADER_NAMES[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n})(HEADER_NAMES || (HEADER_NAMES = {}));\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nvar TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.idtoken\";\r\n    TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\r\n    TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * List of pre-established trusted host URLs.\r\n */\r\nvar AADTrustedHostList = [\r\n    \"login.windows.net\",\r\n    \"login.chinacloudapi.cn\",\r\n    \"login.cloudgovapi.us\",\r\n    \"login.microsoftonline.com\",\r\n    \"login.microsoftonline.de\",\r\n    \"login.microsoftonline.us\"\r\n];\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"RESOURCE\"] = \"resource\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-Ver\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The CacheHelpers class contains a set of helper functions used by the module to manage cache items.\r\n */\r\nvar CacheHelpers = /** @class */ (function () {\r\n    function CacheHelpers(cacheImpl) {\r\n        this.cacheStorage = cacheImpl;\r\n    }\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateAcquireTokenAccountKey = function (accountId) {\r\n        return \"\" + TemporaryCacheKeys.ACQUIRE_TOKEN_ACCOUNT + Constants.RESOURCE_DELIM + accountId;\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateAuthorityKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateNonceKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Sets the cachekeys for and stores the account information in cache\r\n     * @param account\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.setAccountCache = function (account) {\r\n        // Cache acquireTokenAccountKey\r\n        var accountId = account && account.homeAccountIdentifier ? account.homeAccountIdentifier : Constants.NO_ACCOUNT;\r\n        var acquireTokenAccountKey = this.generateAcquireTokenAccountKey(accountId);\r\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n    };\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    CacheHelpers.prototype.setAuthorityCache = function (authority, state) {\r\n        // Cache authorityKey\r\n        var authorityKey = this.generateAuthorityKey(state);\r\n        this.cacheStorage.setItem(authorityKey, authority.canonicalAuthority);\r\n    };\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    CacheHelpers.prototype.updateCacheEntries = function (serverAuthenticationRequest, account) {\r\n        // Cache account and state\r\n        if (account) {\r\n            this.setAccountCache(account);\r\n        }\r\n        // Cache the request state\r\n        this.cacheStorage.setItem(TemporaryCacheKeys.REQUEST_STATE, serverAuthenticationRequest.state);\r\n        // Cache the nonce\r\n        this.cacheStorage.setItem(this.generateNonceKey(serverAuthenticationRequest.state), serverAuthenticationRequest.nonce);\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(serverAuthenticationRequest.authorityInstance, serverAuthenticationRequest.state);\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.resetTempCacheItems = function (state) {\r\n        var _this = this;\r\n        // check state and remove associated cache items\r\n        this.cacheStorage.getKeys().forEach(function (key) {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                var splitKey = key.split(Constants.RESOURCE_DELIM);\r\n                var keyState = splitKey.length > 1 ? splitKey[splitKey.length - 1] : null;\r\n                if (keyState === state) {\r\n                    _this.cacheStorage.removeItem(key);\r\n                }\r\n            }\r\n        });\r\n        // delete generic interactive request parameters\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_STATE);\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.ORIGIN_URI);\r\n    };\r\n    /**\r\n     * Get all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.getAllAccessTokens = function (clientId, authority, resource, homeAccountIdentifier) {\r\n        var _this = this;\r\n        var results = this.cacheStorage.getKeys().reduce(function (tokens, key) {\r\n            var keyMatches = key.match(clientId) && key.match(authority) && key.match(resource) && key.match(homeAccountIdentifier);\r\n            if (keyMatches) {\r\n                var value = _this.cacheStorage.getItem(key);\r\n                if (value) {\r\n                    try {\r\n                        var parseAtKey = JSON.parse(key);\r\n                        if (_this.checkForExactKeyMatch(parseAtKey, clientId, authority, resource, homeAccountIdentifier)) {\r\n                            var newAccessTokenCacheItem = new AccessTokenCacheItem(parseAtKey, JSON.parse(value));\r\n                            return tokens.concat([newAccessTokenCacheItem]);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        throw ClientAuthError.createCacheParseError(key);\r\n                    }\r\n                }\r\n            }\r\n            return tokens;\r\n        }, []);\r\n        return results;\r\n    };\r\n    /**\r\n     * Remove all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.removeAllAccessTokens = function (clientId, authority, resource, homeAccountIdentifier) {\r\n        var _this = this;\r\n        this.cacheStorage.getKeys().forEach(function (key) {\r\n            var keyMatches = key.match(clientId) && key.match(authority) && key.match(resource) && key.match(homeAccountIdentifier);\r\n            if (keyMatches) {\r\n                try {\r\n                    var parseAtKey = JSON.parse(key);\r\n                    if (_this.checkForExactKeyMatch(parseAtKey, clientId, authority, resource, homeAccountIdentifier)) {\r\n                        _this.cacheStorage.removeItem(key);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw ClientAuthError.createCacheParseError(key);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Checks that any parameters are exact matches for key value, since key.match in the above functions only do contains checks, not exact matches.\r\n     * @param atKey\r\n     * @param clientId\r\n     * @param authority\r\n     * @param resource\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.checkForExactKeyMatch = function (atKey, clientId, authority, resource, homeAccountIdentifier) {\r\n        var hasClientId = (atKey.clientId === clientId);\r\n        // If any inputs are empty, return true so we don't fail the check.\r\n        var hasAuthorityUri = StringUtils.isEmpty(authority) || (atKey.authority === authority);\r\n        var hasResourceUri = StringUtils.isEmpty(resource) || (atKey.resource === resource);\r\n        var hasHomeAccountId = StringUtils.isEmpty(homeAccountIdentifier) || (atKey.homeAccountIdentifier === homeAccountIdentifier);\r\n        return hasClientId && hasAuthorityUri && hasResourceUri && hasHomeAccountId;\r\n    };\r\n    return CacheHelpers;\r\n}());\n\n/**\r\n * accountIdentifier       combination of idToken.uid and idToken.utid\r\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\r\n * userName                idToken.preferred_username\r\n * name                    idToken.name\r\n * idToken                 idToken\r\n * sid                     idToken.sid - session identifier\r\n * environment             idtoken.issuer (the authority that issues the token)\r\n */\r\nvar Account = /** @class */ (function () {\r\n    /**\r\n     * Creates an Account Object\r\n     * @praram accountIdentifier\r\n     * @param homeAccountIdentifier\r\n     * @param userName\r\n     * @param name\r\n     * @param idToken\r\n     * @param sid\r\n     * @param environment\r\n     */\r\n    function Account(accountIdentifier, homeAccountIdentifier, idTokenClaims, rawIdToken) {\r\n        this.accountIdentifier = accountIdentifier;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n        this.userName = idTokenClaims.preferred_username;\r\n        this.name = idTokenClaims.name;\r\n        // will be deprecated soon\r\n        this.idToken = rawIdToken;\r\n        this.idTokenClaims = idTokenClaims;\r\n        this.sid = idTokenClaims.sid;\r\n        this.environment = idTokenClaims.iss;\r\n    }\r\n    /**\r\n     * @param idToken\r\n     * @param clientInfo\r\n     */\r\n    Account.createAccount = function (idToken, clientInfo, crypto) {\r\n        // create accountIdentifier\r\n        var accountIdentifier = idToken.claims.oid || idToken.claims.sub;\r\n        // create homeAccountIdentifier\r\n        var uid = clientInfo ? clientInfo.uid : \"\";\r\n        var utid = clientInfo ? clientInfo.utid : \"\";\r\n        var homeAccountIdentifier;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            homeAccountIdentifier = crypto.base64Encode(uid) + \".\" + crypto.base64Encode(utid);\r\n        }\r\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.claims, idToken.rawIdToken);\r\n    };\r\n    /**\r\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\r\n     *\r\n     * @param a1: Account object\r\n     * @param a2: Account object\r\n     */\r\n    Account.compareAccounts = function (a1, a2) {\r\n        if (!(a1 && a1.homeAccountIdentifier) || !(a2 && a2.homeAccountIdentifier)) {\r\n            return false;\r\n        }\r\n        return a1.homeAccountIdentifier === a2.homeAccountIdentifier;\r\n    };\r\n    return Account;\r\n}());\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(JSON.stringify(err));\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthModule class\r\n *\r\n * Parent object instance which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n *\r\n */\r\nvar AuthModule = /** @class */ (function () {\r\n    function AuthModule(configuration) {\r\n        // Set the configuration\r\n        this.config = buildModuleConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoObj = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheStorage = this.config.storageInterface;\r\n        // Initialize storage helper object\r\n        this.cacheManager = new CacheHelpers(this.cacheStorage);\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n    }\r\n    // #endregion\r\n    // #region Getters and Setters\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    AuthModule.prototype.getAccount = function () {\r\n        if (this.account) {\r\n            return this.account;\r\n        }\r\n        // Get id token and client info from cache\r\n        var rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.ID_TOKEN);\r\n        var rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO);\r\n        if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\r\n            var idToken = new IdToken(rawIdToken, this.cryptoObj);\r\n            var clientInfo = buildClientInfo(rawClientInfo, this.cryptoObj);\r\n            this.account = Account.createAccount(idToken, clientInfo, this.cryptoObj);\r\n            return this.account;\r\n        }\r\n        // if login is not yet done, return null\r\n        return null;\r\n    };\r\n    return AuthModule;\r\n}());\n\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\"\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TStorageOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\nfunction buildPublicClientSPAConfiguration(_a) {\r\n    var auth = _a.auth, loggerOptions = _a.loggerOptions, storageInterface = _a.storageInterface, networkInterface = _a.networkInterface, cryptoInterface = _a.cryptoInterface;\r\n    var baseConfig = buildModuleConfiguration({ loggerOptions: loggerOptions, storageInterface: storageInterface, networkInterface: networkInterface, cryptoInterface: cryptoInterface });\r\n    var overlayedConfig = __assign({ auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), auth) }, baseConfig);\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes, appClientId, scopesRequired) {\r\n        this.clientId = appClientId;\r\n        this.scopesRequired = scopesRequired;\r\n        // Filter empty string and null/undefined array items\r\n        var filteredInput = inputScopes ? StringUtils.removeEmptyStringsFromArray(inputScopes) : inputScopes;\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        var scopeArr = filteredInput ? StringUtils.trimAndConvertArrayEntriesToLowerCase(__spreadArrays(filteredInput)) : [];\r\n        this.scopes = new Set(scopeArr);\r\n        if (!this.scopesRequired) {\r\n            this.appendScope(this.clientId);\r\n        }\r\n        this.originalScopes = new Set(this.scopes);\r\n        this.replaceDefaultScopes();\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    ScopeSet.fromString = function (inputScopeString, appClientId, scopesRequired) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes, appClientId, scopesRequired);\r\n    };\r\n    /**\r\n     * Replace client id with the default scopes used for token acquisition.\r\n     */\r\n    ScopeSet.prototype.replaceDefaultScopes = function () {\r\n        if (this.scopes.has(this.clientId)) {\r\n            this.removeScope(this.clientId);\r\n            this.appendScope(Constants.OPENID_SCOPE);\r\n            this.appendScope(Constants.PROFILE_SCOPE);\r\n        }\r\n        this.appendScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        if (this.scopesRequired) {\r\n            // Check if scopes are required but not given or is an empty array\r\n            if (!inputScopes || inputScopes.length < 1) {\r\n                throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n            }\r\n        }\r\n        // Check that scopes is an array object\r\n        if (!Array.isArray(inputScopes)) {\r\n            throw ClientConfigurationError.createScopesNonArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); });\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (StringUtils.isEmpty(newScope)) {\r\n            throw ClientAuthError.createAppendEmptyScopeToSetError(newScope);\r\n        }\r\n        this.scopes.add(newScope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        try {\r\n            var newScopeSet = new ScopeSet(newScopes, this.clientId, this.scopesRequired);\r\n            this.scopes = this.unionScopeSets(newScopeSet);\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        return new Set(__spreadArrays(otherScopes.asArray(), Array.from(this.scopes)));\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        return this.unionScopeSets(otherScopes).size < (this.scopes.size + otherScopes.getScopeCount());\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns true if the set of original scopes only contained client-id\r\n     */\r\n    ScopeSet.prototype.isLoginScopeSet = function () {\r\n        var hasLoginScopes = (this.originalScopes.has(this.clientId) ||\r\n            this.originalScopes.has(Constants.OPENID_SCOPE) ||\r\n            this.originalScopes.has(Constants.PROFILE_SCOPE));\r\n        return this.originalScopes && hasLoginScopes;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        return Array.from(this.scopes);\r\n    };\r\n    /**\r\n     * Returns the original scopes as an array (no extra scopes to consent)\r\n     */\r\n    ScopeSet.prototype.getOriginalScopesAsArray = function () {\r\n        return Array.from(this.originalScopes);\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/**\r\n * Function which validates claims request passed in by the user.\r\n * @param request\r\n */\r\nfunction validateClaimsRequest(request) {\r\n    if (!request.claimsRequest) {\r\n        return;\r\n    }\r\n    try {\r\n        JSON.parse(request.claimsRequest);\r\n    }\r\n    catch (e) {\r\n        throw ClientConfigurationError.createClaimsRequestParsingError(e);\r\n    }\r\n    // TODO: More validation will be added when the server team tells us how they have actually implemented claims\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (userState, randomGuid) {\r\n        return !StringUtils.isEmpty(userState) ? \"\" + randomGuid + Constants.RESOURCE_DELIM + userState : randomGuid;\r\n    };\r\n    /**\r\n     *\r\n     * Extracts user state value from the state sent with the authentication request.\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    ProtocolUtils.getUserRequestState = function (serverResponseState) {\r\n        if (!StringUtils.isEmpty(serverResponseState)) {\r\n            var splitIndex = serverResponseState.indexOf(Constants.RESOURCE_DELIM);\r\n            if (splitIndex > -1 && splitIndex + 1 < serverResponseState.length) {\r\n                return serverResponseState.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * This class extends the ServerRequestParameters class. This class validates URL request parameters, checks for SSO and generates required URL.\r\n */\r\nvar ServerCodeRequestParameters = /** @class */ (function () {\r\n    function ServerCodeRequestParameters(authority, clientId, userRequest, cachedAccount, redirectUri, cryptoImpl, isLoginCall) {\r\n        this.clientId = clientId;\r\n        this.cryptoObj = cryptoImpl;\r\n        this.redirectUri = redirectUri;\r\n        // Telemetry Info\r\n        this.xClientSku = Constants.LIBRARY_NAME;\r\n        this.xClientVer = pkg.version;\r\n        this.authorityInstance = authority;\r\n        this.userRequest = userRequest;\r\n        this.responseType = Constants.CODE_RESPONSE_TYPE;\r\n        this.account = (userRequest && userRequest.account) || cachedAccount;\r\n        // Set scopes, append extra scopes if there is a login call.\r\n        this.scopes = new ScopeSet((this.userRequest && this.userRequest.scopes) || [], this.clientId, !isLoginCall);\r\n        if (isLoginCall) {\r\n            this.appendExtraScopes();\r\n        }\r\n        // Set random vars\r\n        var randomGuid = this.cryptoObj.createNewGuid();\r\n        this.state = ProtocolUtils.setRequestState(this.userRequest && this.userRequest.userRequestState, randomGuid);\r\n        this.nonce = this.cryptoObj.createNewGuid();\r\n        this.correlationId = this.userRequest.correlationId || this.cryptoObj.createNewGuid();\r\n    }\r\n    /**\r\n     * Appends extraScopesToConsent if passed\r\n     */\r\n    ServerCodeRequestParameters.prototype.appendExtraScopes = function () {\r\n        if (this.userRequest && this.scopes) {\r\n            if (this.userRequest.extraScopesToConsent) {\r\n                this.scopes.appendScopes(this.userRequest.extraScopesToConsent);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check to see if there are SSO params set in the Request\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.hasSSOParam = function () {\r\n        var isSSORequest = this.userRequest && (this.account || this.userRequest.sid || this.userRequest.loginHint);\r\n        return !!this.account || !!isSSORequest;\r\n    };\r\n    /**\r\n     * Adds SSO parameter to query parameters:\r\n     * - sid of the account object used to identify the session of the user on the service\r\n     * - login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n     *\r\n     * @param {@link Account} account - Account for which the token is requested\r\n     * @param queryparams\r\n     * @param {@link ServerRequestParameters}\r\n     */\r\n    ServerCodeRequestParameters.prototype.addSSOQueryParameters = function (adalIdToken) {\r\n        /*\r\n         * This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n         * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n         */\r\n        // preference order: account > sid > login_hint\r\n        var serverReqParam = {};\r\n        // if account info is passed, account.sid > account.login_hint\r\n        if (this.account) {\r\n            // sid can only be passed if prompt = none\r\n            if (this.account.sid && this.userRequest && this.userRequest.prompt === PromptValue.NONE) {\r\n                serverReqParam[SSOTypes.SID] = this.account.sid;\r\n            }\r\n            else if (this.account.userName) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = this.account.userName;\r\n            }\r\n        }\r\n        // if no account info available, request.sid > request.login_hint\r\n        else if (this.userRequest) {\r\n            // sid from request - can only be passed if prompt = none\r\n            if (this.userRequest.sid && this.userRequest.prompt === PromptValue.NONE) {\r\n                serverReqParam[SSOTypes.SID] = this.userRequest.sid;\r\n            }\r\n            // loginHint from request\r\n            else if (this.userRequest.loginHint) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = this.userRequest.loginHint;\r\n            }\r\n        }\r\n        // adalIdToken retrieved from cache\r\n        if (adalIdToken && StringUtils.isEmpty(serverReqParam[SSOTypes.SID]) && StringUtils.isEmpty(serverReqParam[SSOTypes.LOGIN_HINT])) {\r\n            if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = adalIdToken.claims.upn;\r\n            }\r\n        }\r\n        return serverReqParam;\r\n    };\r\n    /**\r\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n     * @param adalIdTokenObject\r\n     */\r\n    ServerCodeRequestParameters.prototype.populateQueryParams = function (adalIdTokenObject) {\r\n        var queryParameters = {};\r\n        if (this.userRequest) {\r\n            // add the prompt parameter to serverRequestParameters if passed\r\n            if (this.userRequest.prompt) {\r\n                this.validatePromptParameter(this.userRequest.prompt);\r\n            }\r\n            // Add claims challenge to serverRequestParameters if passed\r\n            if (this.userRequest.claimsRequest) {\r\n                validateClaimsRequest(this.userRequest);\r\n            }\r\n        }\r\n        /*\r\n         * adds sid/login_hint if an SSO Parameter is available\r\n         * this.logger.verbose(\"Calling addHint parameters\");\r\n         */\r\n        if (this.hasSSOParam() || adalIdTokenObject) {\r\n            queryParameters = this.addSSOQueryParameters(adalIdTokenObject);\r\n        }\r\n        // sanity check for developer passed extraQueryParameters\r\n        var eQParams;\r\n        if (this.userRequest) {\r\n            eQParams = this.sanitizeEQParams(this.userRequest, queryParameters);\r\n        }\r\n        // Populate the extraQueryParameters to be sent to the server\r\n        this.queryParameters = this.generateQueryParametersString(queryParameters);\r\n        this.extraQueryParameters = this.generateQueryParametersString(eQParams);\r\n    };\r\n    /**\r\n     * Create navigation url.\r\n     */\r\n    ServerCodeRequestParameters.prototype.createNavigateUrl = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var paramStrings, authEndpoint, requestUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.createParamString()];\r\n                    case 1:\r\n                        paramStrings = _a.sent();\r\n                        authEndpoint = this.authorityInstance.authorizationEndpoint;\r\n                        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n                        if (authEndpoint.indexOf(\"?\") < 0) {\r\n                            authEndpoint += \"?\";\r\n                        }\r\n                        else {\r\n                            authEndpoint += \"&\";\r\n                        }\r\n                        requestUrl = \"\" + authEndpoint + paramStrings.join(\"&\");\r\n                        return [2 /*return*/, requestUrl];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a query parameter string.\r\n     */\r\n    ServerCodeRequestParameters.prototype.createParamString = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var str, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        str = [];\r\n                        str.push(AADServerParamKeys.RESPONSE_TYPE + \"=\" + this.responseType);\r\n                        str.push(AADServerParamKeys.SCOPE + \"=\" + encodeURIComponent(this.scopes.printScopes()));\r\n                        str.push(AADServerParamKeys.CLIENT_ID + \"=\" + encodeURIComponent(this.clientId));\r\n                        str.push(AADServerParamKeys.REDIRECT_URI + \"=\" + encodeURIComponent(this.redirectUri));\r\n                        str.push(AADServerParamKeys.STATE + \"=\" + encodeURIComponent(this.state));\r\n                        str.push(AADServerParamKeys.NONCE + \"=\" + encodeURIComponent(this.nonce));\r\n                        str.push(AADServerParamKeys.CLIENT_INFO + \"=1\");\r\n                        str.push(AADServerParamKeys.X_CLIENT_SKU + \"=\" + this.xClientSku);\r\n                        str.push(AADServerParamKeys.X_CLIENT_VER + \"=\" + this.xClientVer);\r\n                        // Add codes here. May want to add optional step to allow for non-PKCE auth code flows\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.cryptoObj.generatePkceCodes()];\r\n                    case 1:\r\n                        // Add codes here. May want to add optional step to allow for non-PKCE auth code flows\r\n                        _a.generatedPkce = _b.sent();\r\n                        str.push(AADServerParamKeys.CODE_CHALLENGE + \"=\" + encodeURIComponent(this.generatedPkce.challenge));\r\n                        str.push(AADServerParamKeys.CODE_CHALLENGE_METHOD + \"=\" + Constants.S256_CODE_CHALLENGE_METHOD);\r\n                        // Append resource\r\n                        if (this.userRequest && this.userRequest.resource) {\r\n                            str.push(AADServerParamKeys.RESOURCE + \"=\" + encodeURIComponent(this.userRequest.resource));\r\n                        }\r\n                        // Append prompt\r\n                        if (this.userRequest && this.userRequest.prompt) {\r\n                            str.push(AADServerParamKeys.PROMPT + \"=\" + (encodeURIComponent(this.userRequest.prompt)));\r\n                        }\r\n                        // Append claims request\r\n                        if (this.userRequest && this.userRequest.claimsRequest) {\r\n                            str.push(AADServerParamKeys.CLAIMS + \"=\" + encodeURIComponent(this.userRequest.claimsRequest));\r\n                        }\r\n                        // Append query params\r\n                        if (this.queryParameters) {\r\n                            str.push(this.queryParameters);\r\n                        }\r\n                        // Append extra query params\r\n                        if (this.extraQueryParameters) {\r\n                            str.push(this.extraQueryParameters);\r\n                        }\r\n                        str.push(AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(this.correlationId));\r\n                        str.push(AADServerParamKeys.RESPONSE_MODE + \"=\" + Constants.FRAGMENT_RESPONSE_MODE);\r\n                        return [2 /*return*/, str];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Utility to test if valid prompt value is passed in the request\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.validatePromptParameter = function (prompt) {\r\n        if ([PromptValue.LOGIN, PromptValue.SELECT_ACCOUNT, PromptValue.CONSENT, PromptValue.NONE].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.sanitizeEQParams = function (request, ssoQueryParams) {\r\n        var eQParams = request.extraQueryParameters;\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        if (request.claimsRequest) {\r\n            // TODO: this.logger.error(\"Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.\");\r\n            delete eQParams[Constants.CLAIMS];\r\n        }\r\n        // Remove any query parameters that are blacklisted\r\n        BlacklistedEQParams.forEach(function (param) {\r\n            if (eQParams[param]) {\r\n                // TODO: this.logger.error(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\r\n                delete eQParams[param];\r\n            }\r\n        });\r\n        // Remove any query parameters already included in SSO params\r\n        Object.keys(ssoQueryParams).forEach(function (key) {\r\n            if (eQParams[key]) {\r\n                // TODO: this.logger.error(\"Removed param \" + key + \" from extraQueryParameters since it was already present in library query parameters.\")\r\n                delete eQParams[key];\r\n            }\r\n            if (key === SSOTypes.SID) {\r\n                // TODO: this.logger.error(\"Removed domain hint since sid was provided.\")\r\n                delete eQParams[SSOTypes.DOMAIN_HINT];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    /**\r\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n     * @param extraQueryParameters\r\n     */\r\n    ServerCodeRequestParameters.prototype.generateQueryParametersString = function (queryParameters) {\r\n        var paramsString = \"\";\r\n        if (queryParameters) {\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                if (StringUtils.isEmpty(paramsString)) {\r\n                    paramsString = key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n                else {\r\n                    paramsString += \"&\" + key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n            });\r\n        }\r\n        return paramsString;\r\n    };\r\n    return ServerCodeRequestParameters;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class extends the ServerRequestParameters class. This class validates token request parameters and generates a form body and headers required for the request.\r\n */\r\nvar ServerTokenRequestParameters = /** @class */ (function () {\r\n    function ServerTokenRequestParameters(clientId, tokenRequest, codeResponse, redirectUri, cryptoImpl, refreshToken) {\r\n        this.clientId = clientId;\r\n        this.cryptoObj = cryptoImpl;\r\n        this.redirectUri = redirectUri;\r\n        // Telemetry Info\r\n        this.xClientSku = Constants.LIBRARY_NAME;\r\n        this.xClientVer = pkg.version;\r\n        this.tokenRequest = tokenRequest;\r\n        this.codeResponse = codeResponse;\r\n        this.refreshToken = refreshToken;\r\n        // Set scopes, always required for token request/exchange\r\n        this.scopes = new ScopeSet((this.tokenRequest && this.tokenRequest.scopes) || [], this.clientId, true);\r\n        // Set correlation id\r\n        this.correlationId = this.tokenRequest.correlationId || this.cryptoObj.createNewGuid();\r\n    }\r\n    /**\r\n     * Creates headers required for token request.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createRequestHeaders = function () {\r\n        var headers = new Map();\r\n        headers.set(HEADER_NAMES.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Creates string of parameters to send to server in request body.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createRequestBody = function () {\r\n        var paramString = this.createParamString();\r\n        return paramString.join(\"&\");\r\n    };\r\n    /**\r\n     * Helper creates an array of key value string pairs.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createParamString = function () {\r\n        var str = [];\r\n        str.push(AADServerParamKeys.CLIENT_ID + \"=\" + encodeURIComponent(this.clientId));\r\n        str.push(AADServerParamKeys.SCOPE + \"=\" + encodeURIComponent(this.scopes.printScopes()));\r\n        str.push(AADServerParamKeys.REDIRECT_URI + \"=\" + encodeURIComponent(this.redirectUri));\r\n        // If there is a code response or refresh token, push relevant variables. Throw error otherwise.\r\n        if (this.codeResponse) {\r\n            str.push(AADServerParamKeys.CODE + \"=\" + encodeURIComponent(this.codeResponse.code));\r\n            str.push(AADServerParamKeys.CODE_VERIFIER + \"=\" + encodeURIComponent(this.tokenRequest.codeVerifier));\r\n            str.push(AADServerParamKeys.GRANT_TYPE + \"=\" + Constants.CODE_GRANT_TYPE);\r\n        }\r\n        else if (!StringUtils.isEmpty(this.refreshToken)) {\r\n            str.push(AADServerParamKeys.REFRESH_TOKEN + \"=\" + this.refreshToken);\r\n            str.push(AADServerParamKeys.GRANT_TYPE + \"=\" + Constants.RT_GRANT_TYPE);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n        }\r\n        return str;\r\n    };\r\n    return ServerTokenRequestParameters;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = this.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.prototype.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !url.endsWith(\"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.prototype.getDeserializedHash = function () {\r\n        var hash = this.getHash();\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = urlString.getDeserializedHash();\r\n        return !!(parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/**\r\n * Key to cache access tokens, id tokens, and refresh tokens. Helps manage token renewal.\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, resource, uid, utid, cryptoObj) {\r\n        var authorityUri = new UrlString(authority);\r\n        this.authority = authorityUri.urlString;\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.resource = resource;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            this.homeAccountIdentifier = cryptoObj.base64Encode(uid) + \".\" + cryptoObj.base64Encode(utid);\r\n        }\r\n    }\r\n    return AccessTokenKey;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Value of access token cache item which is stored in cache. Helps manage token renewal.\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(tokenType, accessToken, idToken, refreshToken, expiresOn, extExpiresOn) {\r\n        this.tokenType = tokenType;\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.refreshToken = refreshToken;\r\n        this.expiresOnSec = expiresOn;\r\n        this.extExpiresOnSec = extExpiresOn;\r\n    }\r\n    return AccessTokenValue;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cacheManager, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cacheManager = cacheManager;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns a new response with the data from original response filled with the relevant IdToken data.\r\n     * - raw id token\r\n     * - id token claims\r\n     * - unique id (oid or sub claim of token)\r\n     * - tenant id (tid claim of token)\r\n     * @param originalResponse\r\n     * @param idTokenObj\r\n     */\r\n    ResponseHandler.setResponseIdToken = function (originalResponse, idTokenObj) {\r\n        if (!originalResponse) {\r\n            return null;\r\n        }\r\n        else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n        var expiresSeconds = Number(idTokenObj.claims.exp);\r\n        if (expiresSeconds && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(expiresSeconds * 1000);\r\n        }\r\n        return __assign(__assign({}, originalResponse), { idToken: idTokenObj.rawIdToken, idTokenClaims: idTokenObj.claims, uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub, tenantId: idTokenObj.claims.tid });\r\n    };\r\n    /**\r\n     * Validates and handles a response from the server, and returns a constructed object with the authorization code and state.\r\n     * @param serverParams\r\n     */\r\n    ResponseHandler.prototype.handleServerCodeResponse = function (serverParams) {\r\n        try {\r\n            // Validate hash fragment response parameters\r\n            this.validateServerAuthorizationCodeResponse(serverParams, this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_STATE), this.cryptoObj);\r\n            // Cache client info\r\n            if (serverParams.client_info) {\r\n                this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, serverParams.client_info);\r\n            }\r\n            // Create response object\r\n            var response = {\r\n                code: serverParams.code,\r\n                userRequestState: serverParams.state\r\n            };\r\n            return response;\r\n        }\r\n        catch (e) {\r\n            this.cacheManager.resetTempCacheItems(serverParams && serverParams.state);\r\n            throw e;\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (serverResponseHash.state !== cachedState) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description) {\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description) {\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n    };\r\n    /**\r\n     * Helper function which saves or updates the token in the cache and constructs the final token response to send back to the user.\r\n     * @param originalTokenResponse\r\n     * @param authority\r\n     * @param resource\r\n     * @param serverTokenResponse\r\n     * @param clientInfo\r\n     */\r\n    ResponseHandler.prototype.saveToken = function (originalTokenResponse, authority, resource, serverTokenResponse, clientInfo) {\r\n        var _this = this;\r\n        // Set consented scopes in response\r\n        var responseScopes = ScopeSet.fromString(serverTokenResponse.scope, this.clientId, true);\r\n        var responseScopeArray = responseScopes.asArray();\r\n        // Expiration calculation\r\n        var expiresIn = serverTokenResponse.expires_in;\r\n        var expirationSec = TimeUtils.nowSeconds() + expiresIn;\r\n        var extendedExpirationSec = expirationSec + serverTokenResponse.ext_expires_in;\r\n        // Get id token\r\n        if (!StringUtils.isEmpty(originalTokenResponse.idToken)) {\r\n            this.cacheStorage.setItem(PersistentCacheKeys.ID_TOKEN, originalTokenResponse.idToken);\r\n        }\r\n        // Save access token in cache\r\n        var newAccessTokenValue = new AccessTokenValue(serverTokenResponse.token_type, serverTokenResponse.access_token, originalTokenResponse.idToken, serverTokenResponse.refresh_token, expirationSec.toString(), extendedExpirationSec.toString());\r\n        var homeAccountIdentifier = originalTokenResponse.account && originalTokenResponse.account.homeAccountIdentifier;\r\n        var accessTokenCacheItems = this.cacheManager.getAllAccessTokens(this.clientId, authority || \"\", resource || \"\", homeAccountIdentifier || \"\");\r\n        // If no items in cache with these parameters, set new item.\r\n        if (accessTokenCacheItems.length < 1) {\r\n            this.logger.info(\"No tokens found, creating new item.\");\r\n            var newTokenKey = new AccessTokenKey(authority, this.clientId, serverTokenResponse.scope, resource, clientInfo && clientInfo.uid, clientInfo && clientInfo.utid, this.cryptoObj);\r\n            this.cacheStorage.setItem(JSON.stringify(newTokenKey), JSON.stringify(newAccessTokenValue));\r\n        }\r\n        else {\r\n            // Check if scopes are intersecting. If they are, combine scopes and replace cache item.\r\n            accessTokenCacheItems.forEach(function (accessTokenCacheItem) {\r\n                var cachedScopes = ScopeSet.fromString(accessTokenCacheItem.key.scopes, _this.clientId, true);\r\n                if (cachedScopes.intersectingScopeSets(responseScopes)) {\r\n                    _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                    cachedScopes.appendScopes(responseScopeArray);\r\n                    accessTokenCacheItem.key.scopes = cachedScopes.printScopes();\r\n                    if (StringUtils.isEmpty(newAccessTokenValue.idToken)) {\r\n                        newAccessTokenValue.idToken = accessTokenCacheItem.value.idToken;\r\n                    }\r\n                    _this.cacheStorage.setItem(JSON.stringify(accessTokenCacheItem.key), JSON.stringify(newAccessTokenValue));\r\n                }\r\n            });\r\n        }\r\n        // Save tokens in response and return\r\n        return __assign(__assign({}, originalTokenResponse), { tokenType: serverTokenResponse.token_type, scopes: responseScopeArray, accessToken: serverTokenResponse.access_token, refreshToken: serverTokenResponse.refresh_token, expiresOn: new Date(expirationSec * 1000) });\r\n    };\r\n    /**\r\n     * Gets account cached with given key. Returns null if parsing could not be completed.\r\n     * @param accountKey\r\n     */\r\n    ResponseHandler.prototype.getCachedAccount = function (accountKey) {\r\n        try {\r\n            return JSON.parse(this.cacheStorage.getItem(accountKey));\r\n        }\r\n        catch (e) {\r\n            this.logger.warning(\"Account could not be parsed: \" + JSON.stringify(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authorityString\r\n     * @param resource\r\n     * @param state\r\n     */\r\n    ResponseHandler.prototype.createTokenResponse = function (serverTokenResponse, authorityString, resource, state) {\r\n        var tokenResponse = {\r\n            uniqueId: \"\",\r\n            tenantId: \"\",\r\n            tokenType: \"\",\r\n            idToken: null,\r\n            idTokenClaims: null,\r\n            accessToken: \"\",\r\n            refreshToken: \"\",\r\n            scopes: [],\r\n            expiresOn: null,\r\n            account: null,\r\n            userRequestState: \"\"\r\n        };\r\n        // Retrieve current id token object\r\n        var idTokenObj;\r\n        var cachedIdToken = this.cacheStorage.getItem(PersistentCacheKeys.ID_TOKEN);\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n            tokenResponse = ResponseHandler.setResponseIdToken(tokenResponse, idTokenObj);\r\n            // If state is empty, refresh token is being used\r\n            if (!StringUtils.isEmpty(state)) {\r\n                this.logger.info(\"State was detected - nonce should be available.\");\r\n                // check nonce integrity if refresh token is not used - throw an error if not matched        \r\n                if (StringUtils.isEmpty(idTokenObj.claims.nonce)) {\r\n                    throw ClientAuthError.createInvalidIdTokenError(idTokenObj);\r\n                }\r\n                var nonce = this.cacheStorage.getItem(this.cacheManager.generateNonceKey(state));\r\n                if (idTokenObj.claims.nonce !== nonce) {\r\n                    throw ClientAuthError.createNonceMismatchError();\r\n                }\r\n            }\r\n        }\r\n        else if (cachedIdToken) {\r\n            idTokenObj = new IdToken(cachedIdToken, this.cryptoObj);\r\n            tokenResponse = ResponseHandler.setResponseIdToken(tokenResponse, idTokenObj);\r\n        }\r\n        else {\r\n            idTokenObj = null;\r\n        }\r\n        var clientInfo = null;\r\n        var cachedAccount = null;\r\n        if (idTokenObj) {\r\n            // Retrieve client info\r\n            clientInfo = buildClientInfo(this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO), this.cryptoObj);\r\n            // Create account object for request\r\n            tokenResponse.account = Account.createAccount(idTokenObj, clientInfo, this.cryptoObj);\r\n            // Save the access token if it exists\r\n            var accountKey = this.cacheManager.generateAcquireTokenAccountKey(tokenResponse.account.homeAccountIdentifier);\r\n            // Get cached account\r\n            cachedAccount = this.getCachedAccount(accountKey);\r\n        }\r\n        // Return user set state in the response\r\n        tokenResponse.userRequestState = ProtocolUtils.getUserRequestState(state);\r\n        this.cacheManager.resetTempCacheItems(state);\r\n        if (!cachedAccount || !tokenResponse.account || Account.compareAccounts(cachedAccount, tokenResponse.account)) {\r\n            return this.saveToken(tokenResponse, authorityString, resource, serverTokenResponse, clientInfo);\r\n        }\r\n        else {\r\n            this.logger.error(\"Accounts do not match.\");\r\n            this.logger.errorPii(\"Cached Account: \" + JSON.stringify(cachedAccount) + \", New Account: \" + JSON.stringify(tokenResponse.account));\r\n            throw ClientAuthError.createAccountMismatchError();\r\n        }\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(\"{tenant}\", this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.getOpenIdConfigurationEndpointAsync()];\r\n                    case 1:\r\n                        openIdConfigEndpoint = _b.sent();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        _a.tenantDiscoveryResponse = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Aad\"] = 0] = \"Aad\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n    AuthorityType[AuthorityType[\"B2C\"] = 2] = \"B2C\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/**\r\n * The AadAuthority class extends the Authority class and adds functionality specific to the Azure AD OAuth Authority.\r\n */\r\nvar AadAuthority = /** @class */ (function (_super) {\r\n    __extends(AadAuthority, _super);\r\n    function AadAuthority(authority, networkInterface) {\r\n        return _super.call(this, authority, networkInterface) || this;\r\n    }\r\n    Object.defineProperty(AadAuthority.prototype, \"authorityType\", {\r\n        // Set authority type to AAD\r\n        get: function () {\r\n            return AuthorityType.Aad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AadAuthority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return Constants.AAD_INSTANCE_DISCOVERY_ENDPT + \"?api-version=1.0&authorization_endpoint=\" + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    AadAuthority.prototype.getOpenIdConfigurationEndpointAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.isInTrustedHostList(this.canonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n                            return [2 /*return*/, this.defaultOpenIdConfigurationEndpoint];\r\n                        }\r\n                        return [4 /*yield*/, this.networkInterface.sendGetRequestAsync(this.aadInstanceDiscoveryEndpointUrl)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, response.tenant_discovery_endpoint];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    AadAuthority.prototype.isInTrustedHostList = function (host) {\r\n        return AADTrustedHostList.includes(host);\r\n    };\r\n    return AadAuthority;\r\n}(Authority));\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Parse the url and determine the type of authority\r\n     */\r\n    AuthorityFactory.detectAuthorityFromUrl = function (authorityString) {\r\n        var authorityUrl = new UrlString(authorityString);\r\n        var components = authorityUrl.getUrlComponents();\r\n        var pathSegments = components.PathSegments;\r\n        switch (pathSegments[0]) {\r\n            case \"tfp\":\r\n                // tfp denotes a b2c url\r\n                return AuthorityType.B2C;\r\n            default:\r\n                // default authority is always AAD\r\n                return AuthorityType.Aad;\r\n        }\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        var type = AuthorityFactory.detectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case AuthorityType.Aad:\r\n                return new AadAuthority(authorityUrl, networkInterface);\r\n            default:\r\n                throw ClientAuthError.createInvalidAuthorityTypeError(\"Given Url: \" + authorityUrl);\r\n        }\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/**\r\n * AuthorizationCodeModule class\r\n *\r\n * Object instance which will construct requests to send to and handle responses\r\n * from the Microsoft STS using the authorization code flow.\r\n */\r\nvar AuthorizationCodeModule = /** @class */ (function (_super) {\r\n    __extends(AuthorizationCodeModule, _super);\r\n    function AuthorizationCodeModule(configuration) {\r\n        var _this = \r\n        // Implement base module\r\n        _super.call(this, {\r\n            systemOptions: configuration.systemOptions,\r\n            loggerOptions: configuration.loggerOptions,\r\n            storageInterface: configuration.storageInterface,\r\n            networkInterface: configuration.networkInterface,\r\n            cryptoInterface: configuration.cryptoInterface\r\n        }) || this;\r\n        // Implement defaults in config\r\n        _this.clientConfig = buildPublicClientSPAConfiguration(configuration);\r\n        // Initialize default authority instance\r\n        _this.defaultAuthorityInstance = AuthorityFactory.createInstance(_this.clientConfig.auth.authority || Constants.DEFAULT_AUTHORITY, _this.networkClient);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a url for logging in a user. This will by default append the client id to the list of scopes,\r\n     * allowing you to retrieve an id token in the subsequent code exchange. Also performs validation of the request parameters.\r\n     * Including any SSO parameters (account, sid, login_hint) will short circuit the authentication and allow you to retrieve a code without interaction.\r\n     * @param request\r\n     */\r\n    AuthorizationCodeModule.prototype.createLoginUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.createUrl(request, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a url for logging in a user. Also performs validation of the request parameters.\r\n     * Including any SSO parameters (account, sid, login_hint) will short circuit the authentication and allow you to retrieve a code without interaction.\r\n     * @param request\r\n     */\r\n    AuthorizationCodeModule.prototype.createAcquireTokenUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.createUrl(request, false)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function which creates URL. If isLoginCall is true, MSAL appends client id scope to retrieve id token from the service.\r\n     * @param request\r\n     * @param isLoginCall\r\n     */\r\n    AuthorizationCodeModule.prototype.createUrl = function (request, isLoginCall) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1, requestParameters, adalIdToken, adalIdTokenString, urlNavigate, tokenRequest, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = (request && request.authority) ? AuthorityFactory.createInstance(request.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        requestParameters = new ServerCodeRequestParameters(acquireTokenAuthority, this.clientConfig.auth.clientId, request, this.getAccount(), this.getRedirectUri(), this.cryptoObj, isLoginCall);\r\n                        adalIdToken = null;\r\n                        if (!requestParameters.hasSSOParam()) {\r\n                            adalIdTokenString = this.cacheStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                                adalIdToken = new IdToken(adalIdTokenString, this.cryptoObj);\r\n                                this.cacheStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                            }\r\n                        }\r\n                        // Update required cache entries for request.\r\n                        this.cacheManager.updateCacheEntries(requestParameters, request.account);\r\n                        // Populate query parameters (sid/login_hint/domain_hint) and any other extraQueryParameters set by the developer.\r\n                        requestParameters.populateQueryParams(adalIdToken);\r\n                        return [4 /*yield*/, requestParameters.createNavigateUrl()];\r\n                    case 5:\r\n                        urlNavigate = _a.sent();\r\n                        tokenRequest = {\r\n                            scopes: requestParameters.scopes.getOriginalScopesAsArray(),\r\n                            resource: request.resource,\r\n                            codeVerifier: requestParameters.generatedPkce.verifier,\r\n                            extraQueryParameters: request.extraQueryParameters,\r\n                            authority: requestParameters.authorityInstance.canonicalAuthority,\r\n                            correlationId: requestParameters.correlationId\r\n                        };\r\n                        this.cacheStorage.setItem(TemporaryCacheKeys.REQUEST_PARAMS, this.cryptoObj.base64Encode(JSON.stringify(tokenRequest)));\r\n                        return [2 /*return*/, urlNavigate];\r\n                    case 6:\r\n                        e_2 = _a.sent();\r\n                        // Reset cache items before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems(requestParameters && requestParameters.state);\r\n                        throw e_2;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given an authorization code, it will perform a token exchange using cached values from a previous call to\r\n     * createLoginUrl() or createAcquireTokenUrl(). You must call this AFTER using one of those APIs first. You should\r\n     * also use the handleFragmentResponse() API to pass the codeResponse to this function afterwards.\r\n     * @param codeResponse\r\n     */\r\n    AuthorizationCodeModule.prototype.acquireToken = function (codeResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenRequest, acquireTokenAuthority, e_3, tokenEndpoint, tokenReqParams, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 6, , 7]);\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!codeResponse || StringUtils.isEmpty(codeResponse.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        tokenRequest = this.getCachedRequest(codeResponse.userRequestState);\r\n                        acquireTokenAuthority = (tokenRequest && tokenRequest.authority) ? AuthorityFactory.createInstance(tokenRequest.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_3 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_3);\r\n                    case 4:\r\n                        tokenEndpoint = acquireTokenAuthority.tokenEndpoint;\r\n                        tokenReqParams = new ServerTokenRequestParameters(this.clientConfig.auth.clientId, tokenRequest, codeResponse, this.getRedirectUri(), this.cryptoObj);\r\n                        return [4 /*yield*/, this.getTokenResponse(tokenEndpoint, tokenReqParams, tokenRequest, codeResponse)];\r\n                    case 5: \r\n                    // User helper to retrieve token response.\r\n                    // Need to await function call before return to catch any thrown errors.\r\n                    // if errors are thrown asynchronously in return statement, they are caught by caller of this function instead.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 6:\r\n                        e_4 = _a.sent();\r\n                        // Reset cache items and set account to null before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems(codeResponse && codeResponse.userRequestState);\r\n                        this.account = null;\r\n                        throw e_4;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token. Will throw an error if login is not completed (unless\r\n     * id tokens are not being renewed).\r\n     * @param request\r\n     */\r\n    AuthorizationCodeModule.prototype.renewToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var account, requestScopes, acquireTokenAuthority, e_5, cachedTokenItem, expirationSec, offsetCurrentTimeSec, cachedScopes, defaultTokenResponse, tokenEndpoint, tokenReqParams, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 8, , 9]);\r\n                        // Cannot renew token if no request object is given.\r\n                        if (!request) {\r\n                            throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                        }\r\n                        account = request.account || this.getAccount();\r\n                        requestScopes = new ScopeSet(request.scopes || [], this.clientConfig.auth.clientId, true);\r\n                        // If this is an id token renewal, and no account is present, throw an error.\r\n                        if (requestScopes.isLoginScopeSet()) {\r\n                            if (!account) {\r\n                                throw ClientAuthError.createUserLoginRequiredError();\r\n                            }\r\n                        }\r\n                        acquireTokenAuthority = request.authority ? AuthorityFactory.createInstance(request.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_5 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_5);\r\n                    case 4:\r\n                        cachedTokenItem = this.getCachedTokens(requestScopes, acquireTokenAuthority.canonicalAuthority, request.resource, account && account.homeAccountIdentifier);\r\n                        expirationSec = Number(cachedTokenItem.value.expiresOnSec);\r\n                        offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.clientConfig.systemOptions.tokenRenewalOffsetSeconds;\r\n                        if (!(!request.forceRefresh && expirationSec && expirationSec > offsetCurrentTimeSec)) return [3 /*break*/, 5];\r\n                        cachedScopes = ScopeSet.fromString(cachedTokenItem.key.scopes, this.clientConfig.auth.clientId, true);\r\n                        defaultTokenResponse = {\r\n                            uniqueId: \"\",\r\n                            tenantId: \"\",\r\n                            scopes: cachedScopes.asArray(),\r\n                            tokenType: cachedTokenItem.value.tokenType,\r\n                            idToken: \"\",\r\n                            idTokenClaims: null,\r\n                            accessToken: cachedTokenItem.value.accessToken,\r\n                            refreshToken: cachedTokenItem.value.refreshToken,\r\n                            expiresOn: new Date(expirationSec * 1000),\r\n                            account: account,\r\n                            userRequestState: \"\"\r\n                        };\r\n                        // Only populate id token if it exists in cache item.\r\n                        return [2 /*return*/, StringUtils.isEmpty(cachedTokenItem.value.idToken) ? defaultTokenResponse :\r\n                                ResponseHandler.setResponseIdToken(defaultTokenResponse, new IdToken(cachedTokenItem.value.idToken, this.cryptoObj))];\r\n                    case 5:\r\n                        // Renew the tokens.\r\n                        request.authority = cachedTokenItem.key.authority;\r\n                        tokenEndpoint = acquireTokenAuthority.tokenEndpoint;\r\n                        tokenReqParams = new ServerTokenRequestParameters(this.clientConfig.auth.clientId, request, null, this.getRedirectUri(), this.cryptoObj, cachedTokenItem.value.refreshToken);\r\n                        return [4 /*yield*/, this.getTokenResponse(tokenEndpoint, tokenReqParams, request)];\r\n                    case 6: \r\n                    // User helper to retrieve token response.\r\n                    // Need to await function call before return to catch any thrown errors.\r\n                    // if errors are thrown asynchronously in return statement, they are caught by caller of this function instead.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        e_6 = _a.sent();\r\n                        // Reset cache items and set account to null before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems();\r\n                        this.account = null;\r\n                        throw e_6;\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeModule.prototype.logout = function (authorityUri) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentAccount, homeAccountIdentifier, postLogoutRedirectUri, acquireTokenAuthority, e_7, logoutUri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentAccount = this.getAccount();\r\n                        homeAccountIdentifier = currentAccount ? currentAccount.homeAccountIdentifier : \"\";\r\n                        // Remove all pertinent access tokens.\r\n                        this.cacheManager.removeAllAccessTokens(this.clientConfig.auth.clientId, authorityUri, \"\", homeAccountIdentifier);\r\n                        // Clear remaining cache items.\r\n                        this.cacheStorage.clear();\r\n                        // Clear current account.\r\n                        this.account = null;\r\n                        postLogoutRedirectUri = \"\";\r\n                        try {\r\n                            postLogoutRedirectUri = \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\r\n                        }\r\n                        catch (e) { }\r\n                        acquireTokenAuthority = (authorityUri) ? AuthorityFactory.createInstance(authorityUri, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_7 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_7);\r\n                    case 4:\r\n                        logoutUri = \"\" + acquireTokenAuthority.endSessionEndpoint + postLogoutRedirectUri;\r\n                        return [2 /*return*/, logoutUri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Response Handling\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeModule.prototype.handleFragmentResponse = function (hashFragment) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.clientConfig.auth.clientId, this.cacheStorage, this.cacheManager, this.cryptoObj, this.logger);\r\n        // Deserialize hash fragment response parameters.\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        var serverParams = hashUrlString.getDeserializedHash();\r\n        // Get code response\r\n        return responseHandler.handleServerCodeResponse(serverParams);\r\n    };\r\n    // #endregion\r\n    // #region Helpers\r\n    /**\r\n     * Clears cache of items related to current request.\r\n     */\r\n    AuthorizationCodeModule.prototype.cancelRequest = function () {\r\n        var cachedState = this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_STATE);\r\n        this.cacheManager.resetTempCacheItems(cachedState || \"\");\r\n    };\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    AuthorizationCodeModule.prototype.getCachedRequest = function (state) {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            var encodedTokenRequest = this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n            var parsedRequest = JSON.parse(this.cryptoObj.base64Decode(encodedTokenRequest));\r\n            this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                var authorityKey = this.cacheManager.generateAuthorityKey(state);\r\n                var cachedAuthority = this.cacheStorage.getItem(authorityKey);\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    };\r\n    /**\r\n     * Gets all cached tokens based on the given criteria.\r\n     * @param requestScopes\r\n     * @param authorityUri\r\n     * @param resourceId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthorizationCodeModule.prototype.getCachedTokens = function (requestScopes, authorityUri, resourceId, homeAccountIdentifier) {\r\n        var _this = this;\r\n        // Get all access tokens with matching authority, resource id and home account ID\r\n        var tokenCacheItems = this.cacheManager.getAllAccessTokens(this.clientConfig.auth.clientId, authorityUri || \"\", resourceId || \"\", homeAccountIdentifier || \"\");\r\n        if (tokenCacheItems.length === 0) {\r\n            throw ClientAuthError.createNoTokensFoundError(requestScopes.printScopes());\r\n        }\r\n        // Filter cache items based on available scopes.\r\n        var filteredCacheItems = tokenCacheItems.filter(function (cacheItem) {\r\n            var cachedScopes = ScopeSet.fromString(cacheItem.key.scopes, _this.clientConfig.auth.clientId, true);\r\n            return cachedScopes.containsScopeSet(requestScopes);\r\n        });\r\n        // If cache items contains too many matching tokens, throw error.\r\n        if (filteredCacheItems.length > 1) {\r\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError(requestScopes.printScopes());\r\n        }\r\n        else if (filteredCacheItems.length === 1) {\r\n            // Return single cache item.\r\n            return filteredCacheItems[0];\r\n        }\r\n        // If cache items are empty, throw error.\r\n        throw ClientAuthError.createNoTokensFoundError(requestScopes.printScopes());\r\n    };\r\n    /**\r\n     * Makes a request to the token endpoint with the given parameters and parses the response.\r\n     * @param tokenEndpoint\r\n     * @param tokenReqParams\r\n     * @param tokenRequest\r\n     * @param codeResponse\r\n     */\r\n    AuthorizationCodeModule.prototype.getTokenResponse = function (tokenEndpoint, tokenReqParams, tokenRequest, codeResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquiredTokenResponse, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n                            body: tokenReqParams.createRequestBody(),\r\n                            headers: tokenReqParams.createRequestHeaders()\r\n                        })];\r\n                    case 1:\r\n                        acquiredTokenResponse = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.clientConfig.auth.clientId, this.cacheStorage, this.cacheManager, this.cryptoObj, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateServerAuthorizationTokenResponse(acquiredTokenResponse);\r\n                        tokenResponse = responseHandler.createTokenResponse(acquiredTokenResponse, tokenRequest.authority, tokenRequest.resource, codeResponse && codeResponse.userRequestState);\r\n                        // Set current account to received response account, if any.\r\n                        this.account = tokenResponse.account;\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Getters and setters\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    AuthorizationCodeModule.prototype.getRedirectUri = function () {\r\n        if (this.clientConfig.auth.redirectUri) {\r\n            if (typeof this.clientConfig.auth.redirectUri === \"function\") {\r\n                return this.clientConfig.auth.redirectUri();\r\n            }\r\n            else if (!StringUtils.isEmpty(this.clientConfig.auth.redirectUri)) {\r\n                return this.clientConfig.auth.redirectUri;\r\n            }\r\n        }\r\n        // This should never throw unless window.location.href is returning empty.\r\n        throw ClientConfigurationError.createRedirectUriEmptyError();\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    AuthorizationCodeModule.prototype.getPostLogoutRedirectUri = function () {\r\n        if (this.clientConfig.auth.postLogoutRedirectUri) {\r\n            if (typeof this.clientConfig.auth.postLogoutRedirectUri === \"function\") {\r\n                return this.clientConfig.auth.postLogoutRedirectUri();\r\n            }\r\n            else if (!StringUtils.isEmpty(this.clientConfig.auth.postLogoutRedirectUri)) {\r\n                return this.clientConfig.auth.postLogoutRedirectUri;\r\n            }\r\n        }\r\n        // This should never throw unless window.location.href is returning empty.\r\n        throw ClientConfigurationError.createPostLogoutRedirectUriEmptyError();\r\n    };\r\n    return AuthorizationCodeModule;\r\n}(AuthModule));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Builds a response that only sets state\r\n * @param responseState\r\n */\r\nfunction buildResponseStateOnly(responseState) {\r\n    return {\r\n        userRequestState: responseState\r\n    };\r\n}\n\nexport { Account, AuthError, AuthErrorMessage, Authority, AuthorityFactory, AuthorizationCodeModule, ClientAuthError, ClientAuthErrorMessage, ClientConfigurationError, ClientConfigurationErrorMessage, Constants, LogLevel, PersistentCacheKeys, ServerError, StringUtils, TemporaryCacheKeys, UrlString, buildResponseStateOnly };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    // Local storage constant string\n    CACHE_LOCATION_LOCAL: \"localStorage\",\n    // Session storage constant string\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\n    // Interaction status key (only used for browsers)\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    // Interaction in progress cache value\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    // Default popup window width\n    POPUP_WIDTH: 483,\n    // Default popup window height\n    POPUP_HEIGHT: 600,\n    // Default popup monitor poll interval in milliseconds\n    POPUP_POLL_INTERVAL_MS: 50\n};\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport enum HTTP_REQUEST_TYPE {\n    GET = \"GET\",\n    POST = \"POST\"\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { INetworkModule, NetworkRequestOptions } from \"@azure/msal-common\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\n        const response = await fetch(url, {\n            method: HTTP_REQUEST_TYPE.GET,\n            headers: this.getFetchHeaders(options)\n        });\n        return await response.json() as T;\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\n        const reqBody = (options && options.body) || \"\";\n        const response = await fetch(url, {\n            method: HTTP_REQUEST_TYPE.POST,\n            headers: this.getFetchHeaders(options),\n            body: reqBody\n        });\n        return await response.json() as T;\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders \n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        options.headers.forEach((value, key) => {\n            headers.append(key, value);\n        });\n        return headers;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessage = {\n    noWindowObjectError: {\n        code: \"no_window_object\",\n        desc: \"No window object detected.\"\n    },\n    pkceNotGenerated: {\n        code: \"pkce_not_created\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\n    },\n    cryptoDoesNotExist: {\n        code: \"crypto_nonexistent\",\n        desc: \"The crypto object or function is not available.\"\n    },\n    httpMethodNotImplementedError: {\n        code: \"http_method_not_implemented\",\n        desc: \"The HTTP method given has not been implemented in this library.\"\n    },\n    emptyNavigateUriError: {\n        code: \"empty_navigate_uri\",\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n    },\n    hashEmptyError: {\n        code: \"hash_empty_error\",\n        desc: \"Hash value cannot be processed because it is empty.\"\n    },\n    interactionInProgress: {\n        code: \"interaction_in_progress\",\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\n    },\n    popUpWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n    },\n    emptyWindowError: {\n        code: \"empty_window_error\",\n        desc: \"window.open returned null or undefined window object.\"\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\"\n    },\n    popupWindowTimeoutError: {\n        code: \"popup_window_timeout\",\n        desc: \"Popup window token acquisition operation failed due to timeout.\"\n    },\n    redirectInIframeError: {\n        code: \"redirect_in_iframe\",\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n\n    /**\n     * Creates error thrown when no window object can be found.\n     */\n    static createNoWindowObjectError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\n    }\n\n    /**\n     * Creates an error thrown when PKCE is not implemented.\n     * @param errDetail \n     */\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the crypto object is unavailable.\n     * @param errDetail \n     */\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\n     * @param method \n     */\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\n    }\n\n    /**\n     * Creates an error thrown when the navigation URI is empty.\n     */\n    static createEmptyNavigationUriError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     * @param hashValue \n     */\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\n    }\n\n    /**\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\n     */\n    static createInteractionInProgressError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n    }\n\n    /**\n     * Creates an error thrown when the popup window could not be opened.\n     * @param errDetail \n     */\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\n        let errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\n    }\n\n    /**\n     * Creates an error thrown when window.open returns an empty window object.\n     * @param errDetail \n     */\n    static createEmptyWindowCreatedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the user closes a popup.\n     */\n    static createUserCancelledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\n            BrowserAuthErrorMessage.userCancelledError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\n     * @param urlNavigate \n     */\n    static createPopupWindowTimeoutError(urlNavigate: string): BrowserAuthError {\n        const errorMessage = `URL navigated to is ${urlNavigate}, ${BrowserAuthErrorMessage.popupWindowTimeoutError.desc}`;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowTimeoutError.code,\n            errorMessage);\n    }\n\n    /**\n     * Creates an error thrown when navigateWindow is called inside an iframe.\n     * @param windowParentCheck \n     */\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, \n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { INetworkModule, NetworkRequestOptions } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This client implements the XMLHttpRequest class to send GET and POST requests.\n */\nexport class XhrClient implements INetworkModule {\n\n    /**\n     * XhrClient for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\n    }\n\n    /**\n     * XhrClient for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\n    }\n\n    /**\n     * Helper for XhrClient requests.\n     * @param url \n     * @param method \n     * @param options \n     */\n    private sendRequestAsync<T>(url: string, method: string, options?: NetworkRequestOptions): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            this.setXhrHeaders(xhr, options);\n            xhr.onload = (): void => {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    reject(xhr.responseText);\n                }\n                try {\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\n                    resolve(jsonResponse);\n                } catch (e) {\n                    reject(xhr.responseText);\n                }\n            };\n\n            xhr.onerror = (): void => {\n                reject(xhr.status);\n            };\n\n            if (method === \"POST\" && options.body) {\n                xhr.send(options.body);\n            } else if (method === \"GET\") {\n                xhr.send();\n            } else {\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\n            }\n        });\n    }\n\n    /**\n     * Helper to set XHR headers for request.\n     * @param xhr \n     * @param options \n     */\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\n        if (options && options.headers) {\n            options.headers.forEach((value, key) => {\n                xhr.setRequestHeader(key, value);\n            });\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { INetworkModule } from \"@azure/msal-common\";\nimport { FetchClient } from \"../network/FetchClient\";\nimport { XhrClient } from \"../network/XhrClient\";\n\n/**\n * Utility class for browser specific functions\n */\nexport class BrowserUtils {\n\n    // #region Window Navigation and URL management\n\n    /**\n     * Used to redirect the browser to the STS authorization endpoint\n     * @param {string} urlNavigate - URL of the authorization endpoint\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\n     */\n    static navigateWindow(urlNavigate: string, noHistory?: boolean): void {\n        if (noHistory) {\n            window.location.replace(urlNavigate);\n        } else {\n            window.location.assign(urlNavigate);\n        }\n    }\n\n    /**\n     * Clears hash from window url.\n     */\n    static clearHash(): void {\n        window.location.hash = \"\";\n    }\n\n    /**\n     * Returns boolean of whether the current window is in an iframe or not.\n     */\n    static isInIframe(): boolean {\n        return window.parent !== window;\n    }\n\n    // #endregion\n\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getDefaultRedirectUri(): string {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n\n    /**\n     * Returns best compatible network client object. \n     */\n    static getBrowserNetworkClient(): INetworkModule {\n        if (window.fetch) {\n            return new FetchClient();\n        } else {\n            return new XhrClient();\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { AuthOptions, SystemOptions, LoggerOptions, INetworkModule, LogLevel } from \"@azure/msal-common\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\n\n// Default timeout for popup windows in milliseconds\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\n\nexport type BrowserAuthOptions = AuthOptions & {\n    navigateToLoginRequestUrl?: boolean;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n *\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\n * - storeAuthStateInCookie   - If set, MSAL store's the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n */\nexport type CacheOptions = {\n    cacheLocation?: string;\n    storeAuthStateInCookie?: boolean;\n};\n\n/**\n * Library Specific Options\n *\n * - logger                       - Used to initialize the Logger object; TODO: Expand on logger details or link to the documentation on logger\n * - loadFrameTimeout             - maximum time the library should wait for a frame to load\n * - windowHashTimeout            - sets the wait time for hidden iFrame navigation\n * - tokenRenewalOffsetSeconds    - sets the window of offset needed to renew the token before expiry\n * - telemetry                    - Telemetry options for library network requests\n */\nexport type BrowserSystemOptions = SystemOptions & {\n    loggerOptions?: LoggerOptions;\n    networkClient?: INetworkModule;\n    windowHashTimeout?: number;\n};\n\n/**\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - auth: this is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n * - cache: this is where you configure cache location and whether to store cache in cookies\n * - system: this is where you can configure the network client, logger, token renewal offset, and telemetry\n */\nexport type Configuration = {\n    auth?: BrowserAuthOptions,\n    cache?: CacheOptions,\n    system?: BrowserSystemOptions\n};\n\n// Default auth options for browser\nconst DEFAULT_AUTH_OPTIONS: BrowserAuthOptions = {\n    clientId: \"\",\n    authority: null,\n    redirectUri: () => BrowserUtils.getDefaultRedirectUri(),\n    postLogoutRedirectUri: () => BrowserUtils.getDefaultRedirectUri(),\n    navigateToLoginRequestUrl: true\n};\n\n// Default cache options for browser\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\n    storeAuthStateInCookie: false\n};\n\n// Default logger options for browser\nconst DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n    loggerCallback: (level: LogLevel, message: string, containsPii: boolean): void => {\n        if (containsPii) {\n            return;\n        }\n        switch (level) {\n            case LogLevel.Error:\n                console.error(message);\n                return;\n            case LogLevel.Info:\n                console.info(message);\n                return;\n            case LogLevel.Verbose:\n                console.debug(message);\n                return;\n            case LogLevel.Warning:\n                console.warn(message);\n                return;\n        }\n    },\n    piiLoggingEnabled: false\n};\n\n// Default system options for browser\nconst DEFAULT_SYSTEM_OPTIONS: BrowserSystemOptions = {\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\n    networkClient: BrowserUtils.getBrowserNetworkClient(),\n    windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param TAuthOptions\n * @param TCacheOptions\n * @param TSystemOptions\n * @param TFrameworkOptions\n *\n * @returns TConfiguration object\n */\nexport function buildConfiguration({ auth, cache = {}, system = {}}: Configuration): Configuration {\n    const overlayedConfig: Configuration = {\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...auth },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...cache },\n        system: { ...DEFAULT_SYSTEM_OPTIONS, ...system }\n    };\n    return overlayedConfig;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation \n     */\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n\n    /**\n     * Creates error thrown when callback object is invalid.\n     * @param callbackObject \n     */\n    static createInvalidCallbackObjectError(callbackObject: object): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code,\n            `${BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc} Given value for callback function: ${callbackObject}`);\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { ICacheStorage, Constants, PersistentCacheKeys, TemporaryCacheKeys } from \"@azure/msal-common\";\nimport { CacheOptions } from \"../app/Configuration\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\n\n// Cookie life calculation (hours * minutes * seconds * ms)\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage. \n * Cookies are only used if storeAuthStateInCookie is true, and are only used for \n * parameters such as state and nonce, generally.\n */\nexport class BrowserStorage implements ICacheStorage {\n\n    // Cache configuration, either set by user or default values.\n    private cacheConfig: CacheOptions;\n    // Window storage object (either local or sessionStorage)\n    private windowStorage: Storage;\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\n    private clientId: string;\n\n    constructor(clientId: string, cacheConfig: CacheOptions) {\n        // Validate cache location\n        this.validateWindowStorage(cacheConfig.cacheLocation);\n\n        this.cacheConfig = cacheConfig;\n        this.windowStorage = window[this.cacheConfig.cacheLocation];\n        this.clientId = clientId;\n\n        // Migrate any cache entries from older versions of MSAL.\n        this.migrateCacheEntries();\n    }\n\n    /**\n     * Validates the the given cache location string is an expected value:\n     * - localStorage\n     * - sessionStorage (default)\n     * Also validates if given cacheLocation is supported on the browser.\n     * @param cacheLocation \n     */\n    private validateWindowStorage(cacheLocation: string): void {\n        if (typeof window === \"undefined\" || !window) {\n            throw BrowserAuthError.createNoWindowObjectError();\n        }\n\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n\n        const storageSupported = !!window[cacheLocation];\n        if (!storageSupported) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    private migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.getItem(idTokenKey);\n        const clientInfoValue = this.getItem(clientInfoKey);\n        const errorValue = this.getItem(errorKey);\n        const errorDescValue = this.getItem(errorDescKey);\n\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\n\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    private migrateCacheEntry(newKey: string, value: string): void {\n        if (value) {\n            this.setItem(newKey, value);\n        }\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    private generateCacheKey(key: string): string {\n        try {\n            // Defined schemas do not need the key migrated\n            this.validateObjectKey(key);\n            return key;\n        } catch (e) {\n            if (key.startsWith(`${Constants.CACHE_PREFIX}`) || key.startsWith(PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n    }\n\n    /**\n     * Parses key as JSON object, JSON.parse() will throw an error.\n     * @param key \n     */\n    private validateObjectKey(key: string): void {\n        JSON.parse(key);\n    }\n\n    /**\n     * Sets the cache item with the key and value given. \n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key \n     * @param value \n     */\n    setItem(key: string, value: string): void {\n        const msalKey = this.generateCacheKey(key);\n        this.windowStorage.setItem(msalKey, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.setItemCookie(msalKey, value);\n        }\n    }\n    \n    /**\n     * Gets cache item with given key.\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\n     * @param key \n     */\n    getItem(key: string): string {\n        const msalKey = this.generateCacheKey(key);\n        const itemCookie = this.getItemCookie(msalKey);\n        if (this.cacheConfig.storeAuthStateInCookie && itemCookie) {\n            return itemCookie;\n        }\n        return this.windowStorage.getItem(msalKey);\n    }\n    \n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key \n     */\n    removeItem(key: string): void {\n        const msalKey = this.generateCacheKey(key);\n        this.windowStorage.removeItem(msalKey);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.clearItemCookie(msalKey);\n        }\n    }\n    \n    /**\n     * Checks whether key is in cache.\n     * @param key \n     */\n    containsKey(key: string): boolean {\n        const msalKey = this.generateCacheKey(key);\n        return this.windowStorage.hasOwnProperty(msalKey) || this.windowStorage.hasOwnProperty(key);\n    }\n    \n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    /**\n     * Clears all cache entries created by MSAL (except tokens).\n     */\n    clear(): void {\n        let key: string;\n        for (key in this.windowStorage) {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if (this.windowStorage.hasOwnProperty(key) && (key.indexOf(Constants.CACHE_PREFIX) !== -1) && (key.indexOf(this.clientId) !== -1)) {\n                this.removeItem(key);\n            }\n        }\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\n        let cookieStr = `${cookieName}=${cookieValue};path=/;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${cookieName}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return cookie.substring(name.length, cookie.length);\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, \"\", -1);\n    }\n\n    /**\n     * Clear all msal cookies\n     */\n    clearMsalCookie(state?: string): void {\n        const nonceKey = state ? `${TemporaryCacheKeys.NONCE_IDTOKEN}|${state}` : TemporaryCacheKeys.NONCE_IDTOKEN;\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class for math specific functions in browser.\n */\nexport class MathUtils {\n\n    /**\n     * Decimal to Hex\n     *\n     * @param num\n     */\n    static decimalToHex(num: number): string {\n        let hex: string = num.toString(16);\n        while (hex.length < 2) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { MathUtils } from \"../utils/MathUtils\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\nexport class GuidGenerator {\n\n    // browser crypto object used to generate random values\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.cryptoObj = cryptoObj;\n    }\n\n    /*\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n     * pseudo-random numbers.\n     * The algorithm is as follows:\n     *     Set the two most significant bits (bits 6 and 7) of the\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\n     *     Set the four most significant bits (bits 12 through 15) of the\n     *        time_hi_and_version field to the 4-bit version number from\n     *        Section 4.1.3. Version4\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\n     *     values.\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n     * time-low               = 4hexOctet\n     * time-mid               = 2hexOctet\n     * time-high-and-version  = 2hexOctet\n     * clock-seq-and-reserved = hexOctet:\n     * clock-seq-low          = hexOctet\n     * node                   = 6hexOctet\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n     * y values are 8, 9, A, B\n     */\n    generateGuid(): string {\n        try {\n            const buffer: Uint8Array = new Uint8Array(16);\n            this.cryptoObj.getRandomValues(buffer);\n\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\n        }\n        catch (err) {\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n            const hex: string = \"0123456789abcdef\";\n            let r: number = 0;\n            let guidResponse: string = \"\";\n            for (let i: number = 0; i < 36; i++) {\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n                    // each x and y needs to be random\n                    r = Math.random() * 16 | 0;\n                }\n                if (guidHolder[i] === \"x\") {\n                    guidResponse += hex[r];\n                } else if (guidHolder[i] === \"y\") {\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n                    r |= 0x8; // set pos 3 to 1 as 1???\n                    guidResponse += hex[r];\n                } else {\n                    guidResponse += guidHolder[i];\n                }\n            }\n            return guidResponse;\n        }\n    }\n\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    static isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class BrowserStringUtils {\n\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr \n     */\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n        }\n\n        const aBytes = new Uint8Array(nArrLen);\n\n        /* transcription... */\n\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            } else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else /* if (nChr <= 0x7fffffff) */ {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n\n        return aBytes;      \n    }\n\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes \n     */\n    static utf8ArrToString (aBytes: Uint8Array): string {\n        let sView = \"\";\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\n                                    : /* nPart < 127 ? */ /* one byte */\n                                    nPart\n            );\n        }\n        return sView;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Encode {\n    \n    /**\n     * Returns URL Safe b64 encoded string from a plaintext string.\n     * @param input \n     */\n    urlEncode(input: string): string {\n        return this.encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n\n    /**\n     * Returns URL Safe b64 encoded string from an int8Array.\n     * @param inputArr \n     */\n    urlEncodeArr(inputArr: Uint8Array): string {\n        return this.base64EncArr(inputArr)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n\n    /**\n     * Returns b64 encoded string from plaintext string.\n     * @param input \n     */\n    encode(input: string): string {\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(encodeURIComponent(input));\n        return this.base64EncArr(inputUtf8Arr);\n    }\n\n    /**\n     * Base64 encode byte array\n     * @param aBytes \n     */\n    private base64EncArr(aBytes: Uint8Array): string {  \n        const eqLen = (3 - (aBytes.length % 3)) % 3;\n        let sB64Enc = \"\";\n      \n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n            nMod3 = nIdx % 3;\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\n            /*\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\n            */\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n                sB64Enc += String.fromCharCode(\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \n                    this.uint6ToB64(nUint24 >>> 12 & 63), \n                    this.uint6ToB64(nUint24 >>> 6 & 63), \n                    this.uint6ToB64(nUint24 & 63)\n                );\n                nUint24 = 0;\n            }\n        }\n\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n    }\n\n    /**\n     * Base64 string to array encoding helper\n     * @param nUint6 \n     */\n    private uint6ToB64 (nUint6: number): number {\n        return nUint6 < 26 ?\n            nUint6 + 65\n            : nUint6 < 52 ?\n                nUint6 + 71\n                : nUint6 < 62 ?\n                    nUint6 - 4\n                    : nUint6 === 62 ?\n                        43\n                        : nUint6 === 63 ?\n                            47\n                            :\n                            65;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Decode {\n\n    /**\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\n     * @param input \n     */\n    decode(input: string): string {\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (encodedString.length % 4) {\n            case 0:\n                break;\n            case 2:\n                encodedString += \"==\";\n                break;\n            case 3:\n                encodedString += \"=\";\n                break;\n            default:\n                throw new Error(\"Invalid base64 string\");\n        }\n\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\n    }\n\n    /**\n     * Decodes base64 into Uint8Array\n     * @param base64String \n     * @param nBlockSize \n     */\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\n        const nInLen = sB64Enc.length;\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\n        const aBytes = new Uint8Array(nOutLen);\n\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n            nMod4 = nInIdx & 3;\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n                }\n                nUint24 = 0;\n            }\n        }\n\n        return aBytes;\n    }\n\n    /**\n     * Base64 string to array decoding helper\n     * @param charNum \n     */\n    private b64ToUint6(charNum: number): number {\n        return charNum > 64 && charNum < 91 ?\n            charNum - 65\n            : charNum > 96 && charNum < 123 ? \n                charNum - 71\n                : charNum > 47 && charNum < 58 ?\n                    charNum + 4\n                    : charNum === 43 ?\n                        62\n                        : charNum === 47 ?\n                            63\n                            :\n                            0;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { PkceCodes } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\n// Charset to generate values from\nconst CV_CHARSET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\";\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n\n/**\n * Class which exposes APIs to generate PKCE codes and code verifiers.\n */\nexport class PkceGenerator {\n\n    private base64Encode: Base64Encode;\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.base64Encode = new Base64Encode();\n        this.cryptoObj = cryptoObj;\n    }\n\n    /**\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n     */\n    async generateCodes(): Promise<PkceCodes> {\n        const codeVerifier = this.generateCodeVerifier();\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\n        return {\n            verifier: codeVerifier,\n            challenge: codeChallenge\n        };\n    }\n\n    /**\n     * Generates a random 32 byte buffer and returns the base64\n     * encoded string to be used as a PKCE Code Verifier\n     */\n    private generateCodeVerifier(): string {\n        try {\n            // Generate random values as utf-8\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n            this.cryptoObj.getRandomValues(buffer);\n            // verifier as string\n            const pkceCodeVerifierString = this.bufferToCVString(buffer);\n            // encode verifier as base64\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncode(pkceCodeVerifierString);\n            return pkceCodeVerifierB64;\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n\n    /**\n     * Creates a base64 encoded PKCE Code Challenge string from the\n     * hash created from the PKCE Code Verifier supplied\n     */\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\n        try {\n            // hashed verifier\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\n            // encode hash as base64\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n\n    /**\n     * Generates a character string based on input array.\n     * @param buffer \n     */\n    private bufferToCVString(buffer: Uint8Array): string {\n        const charArr = [];\n        for (let i = 0; i < buffer.byteLength; i += 1) {\n            const index = buffer[i] % CV_CHARSET.length;\n            charArr.push(CV_CHARSET[index]);\n        }\n        return charArr.join(\"\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\n// SHA-256 hashing algorithm\nconst HASH_ALG = \"SHA-256\";\n\n/**\n * This class implements functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\nexport class BrowserCrypto {\n\n    constructor() {\n        if (!(this.hasCryptoAPI())) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\n        }\n    }\n\n    /**\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n     * @param dataString \n     */\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\n\n        return this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data);\n    }\n\n    /**\n     * Populates buffer with cryptographically random values.\n     * @param dataBuffer \n     */\n    getRandomValues(dataBuffer: Uint8Array): void {\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\n        if (!cryptoObj.getRandomValues) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\n        }\n        cryptoObj.getRandomValues(dataBuffer);\n    }\n\n    /**\n     * Checks whether IE crypto (AKA msCrypto) is available.\n     */\n    private hasIECrypto(): boolean {\n        return !!window[\"msCrypto\"];\n    }\n\n    /**\n     * Check whether browser crypto is available.\n     */\n    private hasBrowserCrypto(): boolean {\n        return !!window.crypto;\n    }\n\n    /**\n     * Check whether IE crypto or other browser cryptography is available.\n     */\n    private hasCryptoAPI(): boolean {\n        return this.hasIECrypto() || this.hasBrowserCrypto();\n    }\n\n    /**\n     * Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return window.crypto.subtle.digest(algorithm, data);\n    }\n\n    /**\n     * Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n            digestOperation.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { ICrypto, PkceCodes } from \"@azure/msal-common\";\nimport { GuidGenerator } from \"./GuidGenerator\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { Base64Decode } from \"../encode/Base64Decode\";\nimport { PkceGenerator } from \"./PkceGenerator\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n\n    private browserCrypto: BrowserCrypto;\n    private guidGenerator: GuidGenerator;\n    private b64Encode: Base64Encode;\n    private b64Decode: Base64Decode;\n    private pkceGenerator: PkceGenerator;\n\n    constructor() {\n        // Browser crypto needs to be validated first before any other classes can be set.\n        this.browserCrypto = new BrowserCrypto();\n        this.b64Encode = new Base64Encode();\n        this.b64Decode = new Base64Decode();\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return this.guidGenerator.generateGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input \n     */\n    base64Encode(input: string): string {\n        return this.b64Encode.encode(input);\n    }    \n    \n    /**\n     * Decodes input string from base64.\n     * @param input \n     */\n    base64Decode(input: string): string {\n        return this.b64Decode.decode(input);\n    }\n\n    /**\n     * Generates PKCE codes used in Authorization Code Flow.\n     */\n    async generatePkceCodes(): Promise<PkceCodes> {\n        return this.pkceGenerator.generateCodes();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { AuthorizationCodeModule, TokenResponse } from \"@azure/msal-common\";\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport abstract class InteractionHandler {\n\n    protected authModule: AuthorizationCodeModule;\n    protected browserStorage: BrowserStorage;\n\n    constructor(authCodeModule: AuthorizationCodeModule, storageImpl: BrowserStorage) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n    }\n\n    /**\n     * Function to enable user interaction.\n     * @param requestUrl \n     */\n    abstract showUI(requestUrl: string): Window;\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash \n     */\n    abstract async handleCodeResponse(locationHash: string): Promise<TokenResponse>;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { StringUtils, TemporaryCacheKeys, TokenResponse } from \"@azure/msal-common\";\nimport { InteractionHandler } from \"./InteractionHandler\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\n\nexport class RedirectHandler extends InteractionHandler {\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate \n     */\n    showUI(requestUrl: string): Window {\n        // Navigate if valid URL\n        if (!StringUtils.isEmpty(requestUrl)) {\n            // Set interaction status in the library.\n            this.browserStorage.setItem(TemporaryCacheKeys.ORIGIN_URI, window.location.href);\n            this.browserStorage.setItem(BrowserConstants.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE);\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\n            const isIframedApp = BrowserUtils.isInIframe();\n            if (isIframedApp) {\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n            }\n            // Navigate window to request URL\n            BrowserUtils.navigateWindow(requestUrl);\n        } else {\n            // Throw error if request URL is empty.\n            this.authModule.logger.info(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n        // Return this window handle. Not used for redirect, but needed for API definition.\n        return window;\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash \n     */\n    async handleCodeResponse(locationHash: string): Promise<TokenResponse> {\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\n        // Handle code response.\n        const codeResponse = this.authModule.handleFragmentResponse(locationHash);\n        // Hash was processed successfully - remove from cache\n        this.browserStorage.removeItem(TemporaryCacheKeys.URL_HASH);\n        // Acquire token with retrieved code.\n        return this.authModule.acquireToken(codeResponse);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { UrlString, StringUtils, Constants, TokenResponse, AuthorizationCodeModule } from \"@azure/msal-common\";\nimport { InteractionHandler } from \"./InteractionHandler\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\n\n/**\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\n */\nexport class PopupHandler extends InteractionHandler {\n\n    private currentWindow: Window;\n\n    constructor(authCodeModule: AuthorizationCodeModule, storageImpl: BrowserStorage) {\n        super(authCodeModule, storageImpl);\n\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl \n     */\n    showUI(requestUrl: string): Window {\n        // Check that request url is not empty.\n        if (!StringUtils.isEmpty(requestUrl)) {\n            // Set interaction status in the library.\n            this.browserStorage.setItem(BrowserConstants.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE);\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\n        } else {\n            // Throw error if request URL is empty.\n            this.authModule.logger.error(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash \n     */\n    async handleCodeResponse(locationHash: string): Promise<TokenResponse> {\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Handle code response.\n        const codeResponse = this.authModule.handleFragmentResponse(locationHash);\n        \n        // Acquire token with retrieved code.\n        return this.authModule.acquireToken(codeResponse);\n    }\n\n    /**\n     * Monitors a window until it loads a url with a hash\n     * @param contentWindow - window that is being monitored\n     * @param timeout - milliseconds until timeout\n     * @param urlNavigate - url that was navigated to\n     */\n    monitorWindowForHash(contentWindow: Window, timeout: number, urlNavigate: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const maxTicks = timeout / BrowserConstants.POPUP_POLL_INTERVAL_MS;\n            let ticks = 0;\n\n            const intervalId = setInterval(() => {\n                if (contentWindow.closed) {\n                    // Window is closed\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createUserCancelledError());\n                    return;\n                }\n\n                let href;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n\n                // Only run clock when we are on same domain\n                ticks++;\n\n                if (UrlString.hashContainsKnownProperties(href)) {\n                    // Success case\n                    const contentHash = contentWindow.location.hash;\n                    this.cleanPopup(contentWindow);\n                    clearInterval(intervalId);\n                    resolve(contentHash);\n                    return;\n                } else if (ticks > maxTicks) {\n                    // Timeout error\n                    this.cleanPopup(contentWindow);\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createPopupWindowTimeoutError(urlNavigate));\n                    return;\n                }\n            }, BrowserConstants.POPUP_POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @ignore\n     * @hidden\n     */\n    private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number): Window {\n        try {\n            /**\n             * adding winLeft and winTop to account for dual monitor\n             * using screenLeft and screenTop for IE8 and earlier\n             */\n            const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n            const winTop = window.screenTop ? window.screenTop : window.screenY;\n            /**\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\n             * using document.documentElement.clientWidth for IE8 and earlier\n             */\n            const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n            const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n            const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\n            const top = ((height / 2) - (popUpHeight / 2)) + winTop;\n\n            // open the window\n            const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left);\n            if (!popupWindow) {\n                throw BrowserAuthError.createEmptyWindowCreatedError();\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.authModule.logger.error(\"error opening popup \" + e.message);\n            this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\n            throw BrowserAuthError.createPopupWindowError(e.toString());\n        }\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.authModule.cancelRequest();\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\n        this.currentWindow.close();\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        delete e[\"returnValue\"];\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow \n     */\n    private cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { Account, AuthorizationCodeModule, AuthenticationParameters, INetworkModule, TokenResponse, UrlString, TemporaryCacheKeys, TokenRenewParameters, StringUtils } from \"@azure/msal-common\";\nimport { Configuration, buildConfiguration } from \"./Configuration\";\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport { PopupHandler } from \"../interaction_handler/PopupHandler\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { AuthCallback } from \"../types/AuthCallback\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication {\n\n    // Input configuration by developer/user\n    private config: Configuration;\n\n    // auth functions imported from @azure/msal-common module\n    private authModule: AuthorizationCodeModule;\n\n    // callback for error/token response\n    private authCallback: AuthCallback = null;\n\n    // Crypto interface implementation\n    private browserCrypto: CryptoOps;\n\n    // Storage interface implementation\n    private browserStorage: BrowserStorage;\n\n    // Network interface implementation\n    private networkClient: INetworkModule;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        // Set the configuration.\n        this.config = buildConfiguration(configuration);\n\n        // Initialize the crypto class.\n        this.browserCrypto = new CryptoOps();\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the browser storage class.\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\n\n        // Create auth module.\n        this.authModule = new AuthorizationCodeModule({\n            auth: this.config.auth,\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                telemetry: this.config.system.telemetry\n            },\n            loggerOptions: {\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage\n        });\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Set the callback functions for the redirect flow to send back the success or error object, and process\n     * any redirect-related data.\n     * IMPORTANT: Please do not use this function when using the popup APIs, as it may break the response handling\n     * in the main window.\n     * \n     * @param {@link (AuthCallback:type)} authCallback - Callback which contains\n     * an AuthError object, containing error data from either the server\n     * or the library, depending on the origin of the error, or the AuthResponse object \n     * containing data from the server (returned with a null or non-blocking error).\n     */\n    async handleRedirectCallback(authCallback: AuthCallback): Promise<void> {\n        // Check whether callback object was passed.\n        if (!authCallback) {\n            throw BrowserConfigurationAuthError.createInvalidCallbackObjectError(authCallback);\n        }\n\n        // Set the callback object.\n        this.authCallback = authCallback;\n\n        // Check if we need to navigate, otherwise handle hash\n        try {\n            await this.handleRedirectResponse();\n        } catch (err) {\n            this.authCallback(err);\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate \n     * - if false, handles hash string and parses response\n     */\n    private async handleRedirectResponse(): Promise<void> {\n        // Get current location hash from window or cache.\n        const { location: { hash } } = window;\n        const cachedHash = this.browserStorage.getItem(TemporaryCacheKeys.URL_HASH);\n        const isResponseHash = UrlString.hashContainsKnownProperties(hash);\n        if (this.config.auth.navigateToLoginRequestUrl && isResponseHash && !BrowserUtils.isInIframe()) {\n            // Returned from authority using redirect - need to perform navigation before processing response\n            this.browserStorage.setItem(TemporaryCacheKeys.URL_HASH, hash);\n            const loginRequestUrl = this.browserStorage.getItem(TemporaryCacheKeys.ORIGIN_URI);\n            if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\n                // Redirect to home page if login request url is null (real null or the string null)\n                this.authModule.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                BrowserUtils.navigateWindow(\"/\", true);\n            } else {\n                BrowserUtils.navigateWindow(loginRequestUrl, true);\n            }\n            return;\n        }\n\n        if (!isResponseHash) {\n            // Loaded page with no valid hash - pass in the value retrieved from cache, or null/empty string\n            return this.handleHash(cachedHash);\n        }\n\n        if (!this.config.auth.navigateToLoginRequestUrl) {\n            // We don't need to navigate - check for hash and prepare to process\n            BrowserUtils.clearHash();\n            return this.handleHash(hash);\n        }\n    }\n\n    /**\n     * Checks if hash exists and handles in window. Otherwise, cancel any current requests and continue.\n     * @param responseHash \n     * @param interactionHandler \n     */\n    private async handleHash(responseHash: string): Promise<void> {\n        const interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\n        if (!StringUtils.isEmpty(responseHash)) {\n            // Hash contains known properties - handle and return in callback\n            const tokenResponse = await interactionHandler.handleCodeResponse(responseHash);\n            this.authCallback(null, tokenResponse);\n        } else {\n            // There is no hash - assume we are in clean state and clear any current request data.\n            this.cleanRequest();\n        }\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so \n     * any code that follows this function will not execute.\n     * @param {@link (AuthenticationParameters:type)}\n     */\n    loginRedirect(request: AuthenticationParameters): void {\n        // Check if callback has been set. If not, handleRedirectCallbacks wasn't called correctly.\n        if (!this.authCallback) {\n            throw BrowserConfigurationAuthError.createRedirectCallbacksNotSetError();\n        }\n\n        // Check if interaction is in progress. Throw error in callback and return if true.\n        if (this.interactionInProgress()) {\n            this.authCallback(BrowserAuthError.createInteractionInProgressError());\n            return;\n        }\n\n        try {\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\n\n            // Create login url, which will by default append the client id scope to the call.\n            this.authModule.createLoginUrl(request).then((navigateUrl) => {\n                // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n                interactionHandler.showUI(navigateUrl);\n            });\n        } catch (e) {\n            this.cleanRequest();\n            throw e;\n        }\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects \n     * the page, so any code that follows this function will not execute.\n     * @param {@link (AuthenticationParameters:type)}\n     *\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\n     */\n    acquireTokenRedirect(request: AuthenticationParameters): void {\n        // Check if callback has been set. If not, handleRedirectCallbacks wasn't called correctly.\n        if (!this.authCallback) {\n            throw BrowserConfigurationAuthError.createRedirectCallbacksNotSetError();\n        }\n\n        // Check if interaction is in progress. Throw error in callback and return if true.\n        if (this.interactionInProgress()) {\n            this.authCallback(BrowserAuthError.createInteractionInProgressError());\n            return;\n        }\n\n        try {\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\n\n            // Create acquire token url.\n            this.authModule.createAcquireTokenUrl(request).then((navigateUrl) => {\n                // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n                interactionHandler.showUI(navigateUrl);\n            });\n        } catch (e) {\n            this.cleanRequest();\n            throw e;\n        }\n    }\n\n    // #endregion\n\n    // #region Popup Flow \n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param {@link (AuthenticationParameters:type)}\n     *\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async loginPopup(request: AuthenticationParameters): Promise<TokenResponse> {\n        // Check if interaction is in progress. Throw error if true.\n        if (this.interactionInProgress()) {\n            throw BrowserAuthError.createInteractionInProgressError();\n        }\n\n        // Create login url, which will by default append the client id scope to the call.\n        const navigateUrl = await this.authModule.createLoginUrl(request);\n\n        // Acquire token with popup\n        return this.popupTokenHelper(navigateUrl);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     * @param {@link AuthenticationParameters}\n     *\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenPopup(request: AuthenticationParameters): Promise<TokenResponse> {\n        // Check if interaction is in progress. Throw error if true.\n        if (this.interactionInProgress()) {\n            throw BrowserAuthError.createInteractionInProgressError();\n        }\n\n        // Create acquire token url.\n        const navigateUrl = await this.authModule.createAcquireTokenUrl(request);\n\n        // Acquire token with popup\n        return this.popupTokenHelper(navigateUrl);\n    }\n\n    /**\n     * Helper which acquires an authorization code with a popup from given url, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl \n     */\n    private async popupTokenHelper(navigateUrl: string): Promise<TokenResponse> {\n        try {\n            // Create popup interaction handler.\n            const interactionHandler = new PopupHandler(this.authModule, this.browserStorage);\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupWindow = interactionHandler.showUI(navigateUrl);\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await interactionHandler.monitorWindowForHash(popupWindow, this.config.system.windowHashTimeout, navigateUrl);\n            // Handle response from hash string.\n            return await interactionHandler.handleCodeResponse(hash);\n        } catch (e) {\n            this.cleanRequest();\n            throw e;\n        }\n    }\n\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * Use this function to obtain a token before every call to the API / resource provider\n     *\n     * MSAL return's a cached token when available\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\n     *\n     * @param {@link AuthenticationParameters}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     *\n     */\n    async acquireTokenSilent(tokenRequest: TokenRenewParameters): Promise<TokenResponse> {\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return this.authModule.renewToken(tokenRequest);\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     */\n    logout(): void {\n        // create logout string and navigate user window to logout. Auth module will clear cache.\n        this.authModule.logout().then(logoutUri => {\n            BrowserUtils.navigateWindow(logoutUri);\n        });\n    }\n\n    // #endregion\n\n    // #region Getters and setters\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\n     * @returns {string} redirect URL\n     *\n     */\n    public getRedirectUri(): string {\n        return this.authModule.getRedirectUri();\n    }\n\n    /**\n     * Use to get the post logout redirect uri configured in MSAL or null.\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\n     *\n     * @returns {string} post logout redirect URL\n     */\n    public getPostLogoutRedirectUri(): string {\n        return this.authModule.getPostLogoutRedirectUri();\n    }\n\n    /**\n     * Returns the signed in account\n     * (the account object is created at the time of successful login)\n     * or null when no state is found\n     * @returns {@link Account} - the account object stored in MSAL\n     */\n    public getAccount(): Account {\n        return this.authModule.getAccount();\n    }\n\n    // #endregion\n\n    // #region Helpers\n\n    /**\n     * Helper to check whether interaction is in progress\n     */\n    private interactionInProgress(): boolean {\n        // Check whether value in cache is present and equal to expected value\n        return this.browserStorage.getItem(BrowserConstants.INTERACTION_STATUS_KEY) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\n    }\n\n    /**\n     * Helper to remove interaction status and remove tempoarary request data.\n     */\n    private cleanRequest(): void {\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\n        this.authModule.cancelRequest();\n    }\n\n    // #endregion\n}\n"],"names":["extendStatics","__extends","__assign","__awaiter","__generator","DEFAULT_AUTH_OPTIONS","DEFAULT_SYSTEM_OPTIONS"],"mappings":"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"}